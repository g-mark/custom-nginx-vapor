daemon off;
# Heroku dynos have at least 4 cores.
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
    use epoll;
    accept_mutex on;
    worker_connections <%= ENV['NGINX_WORKER_CONNECTIONS'] || 1024 %>;
}

http {
    gzip on;
    gzip_comp_level 2;
    gzip_min_length 512;

    server_tokens off;

    log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
    access_log <%= ENV['NGINX_ACCESS_LOG_PATH'] || 'logs/nginx/access.log' %> l2met;
    error_log <%= ENV['NGINX_ERROR_LOG_PATH'] || 'logs/nginx/error.log' %>;


    include mime.types;
    default_type application/octet-stream;
    sendfile on;

    # Must read the body in 5 seconds.
    client_body_timeout <%= ENV['NGINX_CLIENT_BODY_TIMEOUT'] || 5 %>;

    server {
        listen <%= ENV["PORT"] %>;
        server_name _;
        keepalive_timeout 5;
        client_max_body_size <%= ENV['NGINX_CLIENT_MAX_BODY_SIZE'] || 1 %>M;


        # Set the document root to the `Public` directory of the vapor app
        root /app/Public;
        
        # Force http requests to be https
        if ($http_x_forwarded_proto != "https") {
            return 301 https://$host$request_uri;
        }

        # custom error page
        error_page 404 /404.html;
        location = /404.html {
            internal;
        }

        # custom exact location (`/` - welcome)
        location = / {
            include vapor_proxy.conf;
        }

        # custom prefix location (`/hello/*` - all hello routes)
        location /hello/ {
            include vapor_proxy.conf;
        }

        # custom exact location (`/hi` - forces a 404 from vapor)
        location = /hi {
            include vapor_proxy.conf;
        }

        # custom prefix location (`/crash/*` - forces an internal error)
        location /crash/ {
            include vapor_proxy.conf;
        }
    }
    
}
